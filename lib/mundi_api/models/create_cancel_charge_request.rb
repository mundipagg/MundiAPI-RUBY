# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module MundiApi
  # Request for canceling a charge.
  class CreateCancelChargeRequest < BaseModel
    # The amount that will be canceled.
    # @return [Integer]
    attr_accessor :amount

    # The split rules request
    # @return [List of CreateCancelChargeSplitRulesRequest]
    attr_accessor :split_rules

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['amount'] = 'amount'
      @_hash['split_rules'] = 'split_rules'
      @_hash
    end

    def initialize(amount = nil,
                   split_rules = nil)
      @amount = amount
      @split_rules = split_rules
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      amount = hash['amount']
      # Parameter is an array, so we need to iterate through it
      split_rules = nil
      unless hash['split_rules'].nil?
        split_rules = []
        hash['split_rules'].each do |structure|
          split_rules << (CreateCancelChargeSplitRulesRequest.from_hash(structure) if structure)
        end
      end

      # Create object from extracted values.
      CreateCancelChargeRequest.new(amount,
                                    split_rules)
    end
  end
end
