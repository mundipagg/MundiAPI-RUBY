# mundi_api
#
# This file was automatically generated by APIMATIC v2.0 (
# https://apimatic.io ).

require 'date'
module MundiApi
  # InvoicesResponse Model.
  class InvoicesResponse < BaseModel
    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :code

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :url

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :amount

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :status

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :payment_method

    # TODO: Write general description for this method
    # @return [DateTime]
    attr_accessor :created_at

    # TODO: Write general description for this method
    # @return [List of GetInvoiceItemResponse]
    attr_accessor :items

    # TODO: Write general description for this method
    # @return [Customer]
    attr_accessor :customer

    # TODO: Write general description for this method
    # @return [Charge]
    attr_accessor :charge

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :installments

    # TODO: Write general description for this method
    # @return [BillingAddress]
    attr_accessor :billing_address

    # TODO: Write general description for this method
    # @return [GetSubscriptionResponse]
    attr_accessor :subscription

    # TODO: Write general description for this method
    # @return [Cycle]
    attr_accessor :cycle

    # TODO: Write general description for this method
    # @return [Shipping]
    attr_accessor :shipping

    # TODO: Write general description for this method
    # @return [Array<String, String>]
    attr_accessor :metadata

    # TODO: Write general description for this method
    # @return [DateTime]
    attr_accessor :due_at

    # TODO: Write general description for this method
    # @return [DateTime]
    attr_accessor :canceled_at

    # TODO: Write general description for this method
    # @return [DateTime]
    attr_accessor :billing_at

    # TODO: Write general description for this method
    # @return [DateTime]
    attr_accessor :seen_at

    # Total discounted value
    # @return [Integer]
    attr_accessor :total_discount

    # Total discounted value
    # @return [Integer]
    attr_accessor :total_increment

    # Subscription Id
    # @return [String]
    attr_accessor :subscription_id

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['id'] = 'id'
      @_hash['code'] = 'code'
      @_hash['url'] = 'url'
      @_hash['amount'] = 'amount'
      @_hash['status'] = 'status'
      @_hash['payment_method'] = 'payment_method'
      @_hash['created_at'] = 'created_at'
      @_hash['items'] = 'items'
      @_hash['customer'] = 'customer'
      @_hash['charge'] = 'charge'
      @_hash['installments'] = 'installments'
      @_hash['billing_address'] = 'billing_address'
      @_hash['subscription'] = 'subscription'
      @_hash['cycle'] = 'cycle'
      @_hash['shipping'] = 'shipping'
      @_hash['metadata'] = 'metadata'
      @_hash['due_at'] = 'due_at'
      @_hash['canceled_at'] = 'canceled_at'
      @_hash['billing_at'] = 'billing_at'
      @_hash['seen_at'] = 'seen_at'
      @_hash['total_discount'] = 'total_discount'
      @_hash['total_increment'] = 'total_increment'
      @_hash['subscription_id'] = 'subscription_id'
      @_hash
    end

    def initialize(id = nil,
                   code = nil,
                   url = nil,
                   amount = nil,
                   status = nil,
                   payment_method = nil,
                   created_at = nil,
                   items = nil,
                   charge = nil,
                   installments = nil,
                   billing_address = nil,
                   subscription = nil,
                   shipping = nil,
                   metadata = nil,
                   subscription_id = nil,
                   customer = nil,
                   cycle = nil,
                   due_at = nil,
                   canceled_at = nil,
                   billing_at = nil,
                   seen_at = nil,
                   total_discount = nil,
                   total_increment = nil)
      @id = id
      @code = code
      @url = url
      @amount = amount
      @status = status
      @payment_method = payment_method
      @created_at = created_at
      @items = items
      @customer = customer
      @charge = charge
      @installments = installments
      @billing_address = billing_address
      @subscription = subscription
      @cycle = cycle
      @shipping = shipping
      @metadata = metadata
      @due_at = due_at
      @canceled_at = canceled_at
      @billing_at = billing_at
      @seen_at = seen_at
      @total_discount = total_discount
      @total_increment = total_increment
      @subscription_id = subscription_id
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      id = hash['id']
      code = hash['code']
      url = hash['url']
      amount = hash['amount']
      status = hash['status']
      payment_method = hash['payment_method']
      created_at = APIHelper.rfc3339(hash['created_at']) if hash['created_at']
      # Parameter is an array, so we need to iterate through it
      items = nil
      unless hash['items'].nil?
        items = []
        hash['items'].each do |structure|
          items << (GetInvoiceItemResponse.from_hash(structure) if structure)
        end
      end
      charge = Charge.from_hash(hash['charge']) if hash['charge']
      installments = hash['installments']
      billing_address = BillingAddress.from_hash(hash['billing_address']) if
        hash['billing_address']
      subscription = GetSubscriptionResponse.from_hash(hash['subscription']) if
        hash['subscription']
      shipping = Shipping.from_hash(hash['shipping']) if hash['shipping']
      metadata = hash['metadata']
      subscription_id = hash['subscription_id']
      customer = Customer.from_hash(hash['customer']) if hash['customer']
      cycle = Cycle.from_hash(hash['cycle']) if hash['cycle']
      due_at = APIHelper.rfc3339(hash['due_at']) if hash['due_at']
      canceled_at = APIHelper.rfc3339(hash['canceled_at']) if
        hash['canceled_at']
      billing_at = APIHelper.rfc3339(hash['billing_at']) if hash['billing_at']
      seen_at = APIHelper.rfc3339(hash['seen_at']) if hash['seen_at']
      total_discount = hash['total_discount']
      total_increment = hash['total_increment']

      # Create object from extracted values.
      InvoicesResponse.new(id,
                           code,
                           url,
                           amount,
                           status,
                           payment_method,
                           created_at,
                           items,
                           charge,
                           installments,
                           billing_address,
                           subscription,
                           shipping,
                           metadata,
                           subscription_id,
                           customer,
                           cycle,
                           due_at,
                           canceled_at,
                           billing_at,
                           seen_at,
                           total_discount,
                           total_increment)
    end
  end
end
