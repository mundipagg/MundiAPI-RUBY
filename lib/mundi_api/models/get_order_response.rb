# mundi_api
#
# This file was automatically generated by APIMATIC v2.0 (
# https://apimatic.io ).

require 'date'
module MundiApi
  # Response object for getting an Order
  class GetOrderResponse < BaseModel
    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :code

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :currency

    # TODO: Write general description for this method
    # @return [List of GetOrderItemResponse]
    attr_accessor :items

    # TODO: Write general description for this method
    # @return [Customer]
    attr_accessor :customer

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :status

    # TODO: Write general description for this method
    # @return [DateTime]
    attr_accessor :created_at

    # TODO: Write general description for this method
    # @return [DateTime]
    attr_accessor :updated_at

    # TODO: Write general description for this method
    # @return [List of GetChargeResponse]
    attr_accessor :charges

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :invoice_url

    # TODO: Write general description for this method
    # @return [Shipping]
    attr_accessor :shipping

    # TODO: Write general description for this method
    # @return [Array<String, String>]
    attr_accessor :metadata

    # Checkout Payment Settings Response
    # @return [List of GetCheckoutPaymentResponse]
    attr_accessor :checkouts

    # Ip address
    # @return [String]
    attr_accessor :ip

    # Session id
    # @return [String]
    attr_accessor :session_id

    # Session id
    # @return [Location]
    attr_accessor :location

    # Session id
    # @return [Device]
    attr_accessor :device

    # Indicates whether the order is closed
    # @return [Boolean]
    attr_accessor :closed

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['id'] = 'id'
      @_hash['code'] = 'code'
      @_hash['currency'] = 'currency'
      @_hash['items'] = 'items'
      @_hash['customer'] = 'customer'
      @_hash['status'] = 'status'
      @_hash['created_at'] = 'created_at'
      @_hash['updated_at'] = 'updated_at'
      @_hash['charges'] = 'charges'
      @_hash['invoice_url'] = 'invoice_url'
      @_hash['shipping'] = 'shipping'
      @_hash['metadata'] = 'metadata'
      @_hash['checkouts'] = 'checkouts'
      @_hash['ip'] = 'ip'
      @_hash['session_id'] = 'session_id'
      @_hash['location'] = 'location'
      @_hash['device'] = 'device'
      @_hash['closed'] = 'closed'
      @_hash
    end

    def initialize(id = nil,
                   code = nil,
                   currency = nil,
                   items = nil,
                   status = nil,
                   created_at = nil,
                   updated_at = nil,
                   charges = nil,
                   invoice_url = nil,
                   shipping = nil,
                   metadata = nil,
                   closed = nil,
                   customer = nil,
                   checkouts = nil,
                   ip = nil,
                   session_id = nil,
                   location = nil,
                   device = nil)
      @id = id
      @code = code
      @currency = currency
      @items = items
      @customer = customer
      @status = status
      @created_at = created_at
      @updated_at = updated_at
      @charges = charges
      @invoice_url = invoice_url
      @shipping = shipping
      @metadata = metadata
      @checkouts = checkouts
      @ip = ip
      @session_id = session_id
      @location = location
      @device = device
      @closed = closed
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      id = hash['id']
      code = hash['code']
      currency = hash['currency']
      # Parameter is an array, so we need to iterate through it
      items = nil
      unless hash['items'].nil?
        items = []
        hash['items'].each do |structure|
          items << (GetOrderItemResponse.from_hash(structure) if structure)
        end
      end
      status = hash['status']
      created_at = APIHelper.rfc3339(hash['created_at']) if hash['created_at']
      updated_at = APIHelper.rfc3339(hash['updated_at']) if hash['updated_at']
      # Parameter is an array, so we need to iterate through it
      charges = nil
      unless hash['charges'].nil?
        charges = []
        hash['charges'].each do |structure|
          charges << (GetChargeResponse.from_hash(structure) if structure)
        end
      end
      invoice_url = hash['invoice_url']
      shipping = Shipping.from_hash(hash['shipping']) if hash['shipping']
      metadata = hash['metadata']
      closed = hash['closed']
      customer = Customer.from_hash(hash['customer']) if hash['customer']
      # Parameter is an array, so we need to iterate through it
      checkouts = nil
      unless hash['checkouts'].nil?
        checkouts = []
        hash['checkouts'].each do |structure|
          checkouts << (GetCheckoutPaymentResponse.from_hash(structure) if structure)
        end
      end
      ip = hash['ip']
      session_id = hash['session_id']
      location = Location.from_hash(hash['location']) if hash['location']
      device = Device.from_hash(hash['device']) if hash['device']

      # Create object from extracted values.
      GetOrderResponse.new(id,
                           code,
                           currency,
                           items,
                           status,
                           created_at,
                           updated_at,
                           charges,
                           invoice_url,
                           shipping,
                           metadata,
                           closed,
                           customer,
                           checkouts,
                           ip,
                           session_id,
                           location,
                           device)
    end
  end
end
