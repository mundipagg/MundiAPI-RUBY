# mundi_api
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require 'date'
module MundiApi
  # Response object for getting an invoice
  class GetInvoiceResponse < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :id

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :code

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :url

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :amount

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :status

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :payment_method

    # TODO: Write general description for this method
    # @return [DateTime]
    attr_accessor :created_at

    # TODO: Write general description for this method
    # @return [List of GetInvoiceItemResponse]
    attr_accessor :items

    # TODO: Write general description for this method
    # @return [GetCustomerResponse]
    attr_accessor :customer

    # TODO: Write general description for this method
    # @return [GetChargeResponse]
    attr_accessor :charge

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :installments

    # TODO: Write general description for this method
    # @return [GetBillingAddressResponse]
    attr_accessor :billing_address

    # TODO: Write general description for this method
    # @return [GetSubscriptionResponse]
    attr_accessor :subscription

    # TODO: Write general description for this method
    # @return [GetPeriodResponse]
    attr_accessor :cycle

    # TODO: Write general description for this method
    # @return [GetShippingResponse]
    attr_accessor :shipping

    # TODO: Write general description for this method
    # @return [Hash of String]
    attr_accessor :metadata

    # TODO: Write general description for this method
    # @return [DateTime]
    attr_accessor :due_at

    # TODO: Write general description for this method
    # @return [DateTime]
    attr_accessor :canceled_at

    # TODO: Write general description for this method
    # @return [DateTime]
    attr_accessor :billing_at

    # TODO: Write general description for this method
    # @return [DateTime]
    attr_accessor :seen_at

    # Total discounted value
    # @return [Integer]
    attr_accessor :total_discount

    # Total discounted value
    # @return [Integer]
    attr_accessor :total_increment

    # Subscription Id
    # @return [String]
    attr_accessor :subscription_id

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['id'] = 'id'
      @_hash['code'] = 'code'
      @_hash['url'] = 'url'
      @_hash['amount'] = 'amount'
      @_hash['status'] = 'status'
      @_hash['payment_method'] = 'payment_method'
      @_hash['created_at'] = 'created_at'
      @_hash['items'] = 'items'
      @_hash['customer'] = 'customer'
      @_hash['charge'] = 'charge'
      @_hash['installments'] = 'installments'
      @_hash['billing_address'] = 'billing_address'
      @_hash['subscription'] = 'subscription'
      @_hash['cycle'] = 'cycle'
      @_hash['shipping'] = 'shipping'
      @_hash['metadata'] = 'metadata'
      @_hash['due_at'] = 'due_at'
      @_hash['canceled_at'] = 'canceled_at'
      @_hash['billing_at'] = 'billing_at'
      @_hash['seen_at'] = 'seen_at'
      @_hash['total_discount'] = 'total_discount'
      @_hash['total_increment'] = 'total_increment'
      @_hash['subscription_id'] = 'subscription_id'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        customer
        cycle
        due_at
        canceled_at
        billing_at
        seen_at
        total_discount
        total_increment
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(id = nil,
                   code = nil,
                   url = nil,
                   amount = nil,
                   status = nil,
                   payment_method = nil,
                   created_at = nil,
                   items = nil,
                   charge = nil,
                   installments = nil,
                   billing_address = nil,
                   subscription = nil,
                   shipping = nil,
                   metadata = nil,
                   subscription_id = nil,
                   customer = SKIP,
                   cycle = SKIP,
                   due_at = SKIP,
                   canceled_at = SKIP,
                   billing_at = SKIP,
                   seen_at = SKIP,
                   total_discount = SKIP,
                   total_increment = SKIP)
      @id = id
      @code = code
      @url = url
      @amount = amount
      @status = status
      @payment_method = payment_method
      @created_at = created_at
      @items = items
      @customer = customer unless customer == SKIP
      @charge = charge
      @installments = installments
      @billing_address = billing_address
      @subscription = subscription
      @cycle = cycle unless cycle == SKIP
      @shipping = shipping
      @metadata = metadata
      @due_at = due_at unless due_at == SKIP
      @canceled_at = canceled_at unless canceled_at == SKIP
      @billing_at = billing_at unless billing_at == SKIP
      @seen_at = seen_at unless seen_at == SKIP
      @total_discount = total_discount unless total_discount == SKIP
      @total_increment = total_increment unless total_increment == SKIP
      @subscription_id = subscription_id
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      id = hash.key?('id') ? hash['id'] : nil
      code = hash.key?('code') ? hash['code'] : nil
      url = hash.key?('url') ? hash['url'] : nil
      amount = hash.key?('amount') ? hash['amount'] : nil
      status = hash.key?('status') ? hash['status'] : nil
      payment_method =
        hash.key?('payment_method') ? hash['payment_method'] : nil
      created_at = if hash.key?('created_at')
                     (DateTimeHelper.from_rfc3339(hash['created_at']) if hash['created_at'])
                   end
      # Parameter is an array, so we need to iterate through it
      items = nil
      unless hash['items'].nil?
        items = []
        hash['items'].each do |structure|
          items << (GetInvoiceItemResponse.from_hash(structure) if structure)
        end
      end

      items = nil unless hash.key?('items')
      charge = GetChargeResponse.from_hash(hash['charge']) if hash['charge']
      installments = hash.key?('installments') ? hash['installments'] : nil
      billing_address = GetBillingAddressResponse.from_hash(hash['billing_address']) if
        hash['billing_address']
      subscription = GetSubscriptionResponse.from_hash(hash['subscription']) if
        hash['subscription']
      shipping = GetShippingResponse.from_hash(hash['shipping']) if hash['shipping']
      metadata = hash.key?('metadata') ? hash['metadata'] : nil
      subscription_id =
        hash.key?('subscription_id') ? hash['subscription_id'] : nil
      customer = GetCustomerResponse.from_hash(hash['customer']) if hash['customer']
      cycle = GetPeriodResponse.from_hash(hash['cycle']) if hash['cycle']
      due_at = if hash.key?('due_at')
                 (DateTimeHelper.from_rfc3339(hash['due_at']) if hash['due_at'])
               else
                 SKIP
               end
      canceled_at = if hash.key?('canceled_at')
                      (DateTimeHelper.from_rfc3339(hash['canceled_at']) if hash['canceled_at'])
                    else
                      SKIP
                    end
      billing_at = if hash.key?('billing_at')
                     (DateTimeHelper.from_rfc3339(hash['billing_at']) if hash['billing_at'])
                   else
                     SKIP
                   end
      seen_at = if hash.key?('seen_at')
                  (DateTimeHelper.from_rfc3339(hash['seen_at']) if hash['seen_at'])
                else
                  SKIP
                end
      total_discount =
        hash.key?('total_discount') ? hash['total_discount'] : SKIP
      total_increment =
        hash.key?('total_increment') ? hash['total_increment'] : SKIP

      # Create object from extracted values.
      GetInvoiceResponse.new(id,
                             code,
                             url,
                             amount,
                             status,
                             payment_method,
                             created_at,
                             items,
                             charge,
                             installments,
                             billing_address,
                             subscription,
                             shipping,
                             metadata,
                             subscription_id,
                             customer,
                             cycle,
                             due_at,
                             canceled_at,
                             billing_at,
                             seen_at,
                             total_discount,
                             total_increment)
    end

    def to_created_at
      DateTimeHelper.to_rfc3339(created_at)
    end

    def to_due_at
      DateTimeHelper.to_rfc3339(due_at)
    end

    def to_canceled_at
      DateTimeHelper.to_rfc3339(canceled_at)
    end

    def to_billing_at
      DateTimeHelper.to_rfc3339(billing_at)
    end

    def to_seen_at
      DateTimeHelper.to_rfc3339(seen_at)
    end
  end
end
